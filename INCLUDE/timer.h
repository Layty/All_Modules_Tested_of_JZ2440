/****************************************************************************************************
  * @brief      : 	JZ2440v2开发板定时器时间相关代码源文件
  * @version    : 	V0.0
  * @note       : 	无
  * @history    : 	无
*****************************************************************************************************/

#ifndef _TIMER_H
#define _TIMER_H

#define NULL  ((void *)0)

typedef void(*TimerFunc)(void);

typedef struct STimerDesc {
	char *name;
	TimerFunc fp;
}STimerDesc, *PSTimerDesc;

/**********************************************************************************
  * @brief       : 	初始化定时器
  * @param[in]   : 	无
  * @param[out]  : 	无
  * @return      : 	无
  * @others      : 	无
***********************************************************************************/
void InitTimer(void);

/**********************************************************************************
  * @brief       : 	一般的粗糙的延时函数
  * @param[in]   : 	d	延时的值
  * @param[out]  : 	无
  * @return      : 	无
  * @others      : 	无
***********************************************************************************/
void Delay(volatile int d);

/**********************************************************************************
  * @brief       : 	注册定时器中断处理函数
  * @param[in]   : 	name	定时器的名字
  					fp		定时器中断处理函数指针
  * @param[out]  : 	无
  * @return      : 	-1	注册失败
  					0	注册成功
  * @others      : 	无
***********************************************************************************/
int RegisterTimer(char *name, TimerFunc fp);

/**********************************************************************************
  * @brief       : 	注销定时器中断处理函数
  * @param[in]   : 	name	定时器的名字
  * @param[out]  : 	无
  * @return      : 	-1	注销失败
  					0	注销成功
  * @others      : 	无
***********************************************************************************/
int UnregisterTimer(char *name);

/**********************************************************************************
  * @brief       : 	关闭定时器
  * @param[in]   : 	无
  * @param[out]  : 	无
  * @return      : 	无
  * @others      : 	无
***********************************************************************************/
int StopTimer(void);

/**********************************************************************************
  * @brief       : 	启动定时器
  * @param[in]   : 	无
  * @param[out]  : 	无
  * @return      : 	无
  * @others      : 	无
***********************************************************************************/
int StartTimer(void);

/**********************************************************************************
  * @brief       : 	us延时函数
  * @param[in]   : 	n	需要延时的us值
  * @param[out]  : 	无
  * @return      : 	无
  * @others      : 	尽量少调用函数
***********************************************************************************/
void uDelay(int n);

/**********************************************************************************
  * @brief       : 	ms延时函数
  * @param[in]   : 	m  	需要延时的ms值
  * @param[out]  : 	无
  * @return      : 	无
  * @others      : 	尽量少调用函数
***********************************************************************************/
void mDelay(int m);

/**********************************************************************************
  * @brief       : 	获得系统的us值
  * @param[in]   : 	无
  * @param[out]  : 	无
  * @return      : 	返回获得的us值
  * @others      : 	尽量少调用函数
***********************************************************************************/
unsigned long long GetSystemTimeUs(void);

/**********************************************************************************
  * @brief       : 	获得us差值
  * @param[in]   : 	pre	上次获得的us值
  					now	这次获得的us值
  * @param[out]  : 	无
  * @return      : 	返回us差值
  * @others      : 	无
***********************************************************************************/
unsigned int DeltaTimeUs(unsigned long long pre, unsigned long long now);

#endif

